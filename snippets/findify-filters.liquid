{% liquid
  assign component_id = component_id
  assign close_filters_element_id = 'close-btn'
  assign see_results_element_id = 'see-results-btn'
  assign findify_filters_component_id = 'findify-filters-sidebar'
%}
<aside
  id="{{ findify_filters_component_id }}"
  class="findify-filters-sidebar findify-open"
>
  <div class="findify-filters-container">
    <button id="{{ close_filters_element_id }}" class="findify-modal-header">
      <span class="findify-modal-header-title">
        {{- 'findify.filters.filter_by' | t -}}
      </span>
      {% render 'findify-icon-cross' %}
    </button>
    {% if active_filters != 'none' %}
      <div class="findify-search-header-breadcrumb">
        {% render 'findify-filter-breadcrumb',
          active_filters: active_filters,
          color_layout: color_layout,
          component_id: 'sidebar',
          sidebar_component_id: component_id,
          show_all: true
        %}
      </div>
    {% endif %}
    <div
      id="findify-filters"
      class="findify-filters-wrapper modal-filters-wrapper"
    >
      {% comment %}
        This element #findify-filters will be replaced with rendered html from sections/findify-filters
      {% endcomment %}
    </div>
    <button id="{{ see_results_element_id }}" class="findify-modal-footer">
      {{ 'findify.filters.see_results' | t }}
    </button>
  </div>
</aside>

<script>
  const filterSection = () => {
      const close_filters_element_id = "{{ close_filters_element_id }}";
      const see_results_element_id = "{{ see_results_element_id }}";
      const component_id = "{{ component_id }}"
      const findify_filters_component_id = "{{ findify_filters_component_id }}";
      const openClass = 'findify-open-left';
      //changes
      const isFiltersHidden = {{ all_filters_hidden }};
      const isAllFiltersCollapsed= {{ all_filters_collapsed }};
      const isOneFilterOpen = {{ one_open_filter }};
      const sidebarClass = document.querySelector('.findify-filters-sidebar').className;

      if(isFiltersHidden)
        document.querySelector('.findify-filters-sidebar').className = sidebarClass.replace('findify-open', '');

      if(isAllFiltersCollapsed)
        document.querySelectorAll('.findify-filters-body').forEach(item => {
          item.setAttribute('aria-expanded', 'false');
        })

      if(isOneFilterOpen)
        document.querySelectorAll('.findify-filters-body').forEach((item, index) => {
          if(index > 0) item.setAttribute('aria-expanded', 'false');
        })
      //end

      const toggleFilterSection = () => {
        const isDrawerDesktop = document.querySelector('.findify-search-section.findify-filters-drawer');
        if(findify.utils?.isMobile() || isDrawerDesktop){
          findify.grid?.load();
        }
        const containerElement = document.getElementById(component_id);
        containerElement.classList.toggle(openClass);
        document.documentElement.classList.toggle("findify-no-scroll");
      }
      const setSidebarOpen = () => {
        if (findify?.filters?.isSidebarOpen) {
          const containerElement = document.getElementById(findify_filters_component_id);
          containerElement?.classList?.add('findify-open');
        }
      };
      setSidebarOpen();
      const closeFiltersElement = document.getElementById(close_filters_element_id);
      closeFiltersElement.addEventListener('click', toggleFilterSection)

      const seeResultsElement = document.getElementById(see_results_element_id);
      seeResultsElement.addEventListener('click', toggleFilterSection);
  }
  filterSection();
</script>
