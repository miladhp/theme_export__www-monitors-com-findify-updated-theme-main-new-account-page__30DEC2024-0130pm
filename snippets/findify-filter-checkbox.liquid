{% liquid
  assign value = value | strip_html
  assign filter_element_id = 'findify-filter-' | append: value | url_encode
%}

<div
  tabindex="0"
  id="{{ filter_element_id }}"
  class="findify-filters-checkbox-item {{class}}"
  data-name="{{name}}"
  data-type="{{type}}"
  selected="{{is_selected}}"
  value="{{value}}"
>
  {% case component %}
    {% when 'reviews' %}
      {% render 'findify-filter-rating-value', is_selected: is_selected, value: value %}
      <span class=" findify-filter-checkbox-item-count">({{ count }})</span>
    {% when 'color' %}
      {% render 'findify-filter-color-value',
        is_selected: is_selected,
        color_name: color_name,
        border_color: border_color,
        color_filter_layout: color_filter_layout,
        old_color: old_color,
        count: count
      %}
    {% else %}
      {% render 'findify-filter-text-value', is_selected: is_selected, has_children: has_children, text: text, filter_element_id: filter_element_id, name: name %}
      <span class="findify-filter-checkbox-item-count">({{ count }})</span>
  {% endcase %}
</div>

<script>
  const onFilterClick = () => {
    const filter_element_id = "{{ filter_element_id }}"
    let value = `{{ value }}`;
    const type = `{{ type }}`;
    const name = `{{ name }}`;
    const filterElement = document.getElementById(filter_element_id);

    const filterClickHandler = (e) => {
      e.preventDefault();
      e.stopPropagation();
      findify.filters.update({ value, type, name });
    };

    filterElement.addEventListener("click", filterClickHandler);
    filterElement.addEventListener("keydown", e => {
      if (e.key === 'Enter') filterClickHandler(e)
    });
  };

  onFilterClick();
</script>
