<style>
  @media screen and (min-width: 1000px)
  {
    .custom-blog-page__header {
      max-width: 67%;
    }
  } 
</style>
<article data-section-id="{{ section.id }}" data-section-type="blog-post">
  {% assign article_tags = article.tags %}
  <div class="container">
    <header class="page__header page__header--stack custom-blog-page__header">
      <h1 class="page__title heading h1">{{ article.title | replace: "Barco", "Barco&reg;" }}</h1>

      {%- capture page_meta -%}
        {%- if section.settings.show_author -%}
          <span class="page__meta-item page__meta-item--author">{{ 'blog.article.written_by' | t: author: article.author }}</span>
        {%- endif -%}

        {%- if section.settings.show_date -%}
          <time class="page__meta-item page__meta-item--date">{{ article.published_at | date: format: 'short_month_day_year' }}</time>
        {%- endif -%}
      {%- endcapture -%}

      {%- if page_meta != blank -%}
        <div class="page__meta">
          {{ page_meta }}
        </div>
      {%- endif -%}
    </header>

    <div class="blog-container custom-featured-new-renewed">
      <div class="blog-post">
        {%- if article.image -%}
          <div class="article__image-wrapper">
            {%- capture supported_sizes -%}{%- render 'image-size', sizes: '300,400,500,600,700,800,900,1000,1100,1200', image: article.image -%}{%- endcapture -%}
            {%- assign image_url = article.image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

            <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: article.image.aspect_ratio }}%">
<!--               <img class="lazyload image--fade-in" data-src="{{ image_url }}" data-sizes="auto" data-widths="[{{ supported_sizes }}]" alt="{{ article.image.alt | escape }}" loading="lazy"> -->
              {{- article.image | image_url: width: article.image.width | image_tag: loading: 'lazy', sizes: sizes_attribute, widths: '300,400,500,600,700,800,900,1000,1200', class: 'image--fade-in' -}}

              <noscript>
                <img loading="lazy" data-src="{{ article.image | img_url: '800x' }}" src="{{ article.image | img_url: '800x' }}" alt="{{ article.image.alt | escape }}">
              </noscript>
            </div>
          </div>
        
          {% for block in section.blocks %}
            {% if block.type == 'image' %}
              {%- assign productselection = block.settings.article -%}
              {% if productselection == article.handle %} 
                {% if article.excerpt contains 'jotform'%}
                  <div class="print-version">
                    {% if block.settings.image != blank %}
                      <div class="version-image">
                        <img loading="lazy" data-src="{{ block.settings.image | img_url: 'master'}}" src="{{ block.settings.image | img_url: 'master'}}" alt="">
                      </div>
                    {% endif %}
                    <div class="version-text">
                      <h3>{{ block.settings.heading }}</h3>
                      <p>{{ block.settings.subheading }}</p>
                      <a  class="button form-open button--primary">{{ block.settings.buttontext }}</a>
                      <div class="print-form">
                        {{ article.excerpt }}
                      </div>
                    </div>
                  </div>
                {% endif %}
              {% endif %}
            {% endif %}
          {% endfor  %}
        
        {%- endif -%}

        {%- if section.settings.show_share_buttons -%}
          {%- capture share_buttons -%}
            {%- assign share_url = shop.url | append: article.url -%}
            {%- assign twitter_text = article.title -%}
            {%- assign pinterest_description = article.excerpt_or_content | strip_html | truncatewords: 15 | url_param_escape -%}
            {%- assign pinterest_image = article.image | img_url: 'large' | prepend: 'https:' -%}

            <ul class="social-media__item-list list--unstyled" role="list">
              <li class="social-media__item social-media__item--facebook">
                <a href="https://www.facebook.com/sharer.php?u={{ share_url }}" target="_blank" rel="noopener" aria-label="{{ 'general.social.facebook_share' | t }}">{%- render 'icon', icon: 'facebook' -%}</a>
              </li>

              <li class="social-media__item social-media__item--pinterest">
                <a href="https://pinterest.com/pin/create/button/?url={{ share_url }}{% if pinterest_image != blank %}&media={{ pinterest_image }}{% endif %}&description={{ pinterest_description }}" target="_blank" rel="noopener" aria-label="{{ 'general.social.pinterest_pin' | t }}">{%- render 'icon', icon: 'pinterest' -%}</a>
              </li>

              <li class="social-media__item social-media__item--twitter">
                <a href="https://twitter.com/share?{% if twitter_text != blank %}text={{twitter_text}}&{% endif %}url={{ share_url }}" target="_blank" rel="noopener" aria-label="{{ 'general.social.twitter_tweet' | t }}">{%- render 'icon', icon: 'twitter' -%}</a>
              </li>

              <li class="social-media__item">
                <a href="mailto:?&subject={{ article.title | escape }}&body={{ share_url }}" aria-label="{{ 'general.social.email_share' | t }}">{% render 'icon', icon: 'email' %}</a>
              </li>

              <li class="social-media__item social-media__item--linkedin">
                <a href="https://www.linkedin.com/sharing/share-offsite/?url={{ share_url }}" target="_blank" rel="noopener" aria-label="{{ 'Share on Linkedin' }}">{%- render 'icon', icon: 'linkedin' -%}</a>
              </li>

               <li class="social-media__item social-media__item--whatsapp">
                <a href="whatsapp://send?text={{ share_url }}" target="_blank" rel="noopener" aria-label="{{ 'Share on Whatsapp' }}">{%- render 'icon', icon: 'whatsapp' -%}</a>
              </li>

            </ul>
          {%- endcapture -%}
        {%- endif -%}

        <div class="article__inner">
          <div class="article__content rte">
            {{ article.content | replace: "Barco", "Barco&reg;" }}
          </div>

          {%- if section.settings.show_share_buttons or section.settings.show_tags and article.tags.size > 0 -%}
            <div class="article__aside">

              {%- if section.settings.show_share_buttons -%}
                <div class="article__aside-item">
                  <span class="article__share-label">{{ 'blog.article.share' | t }}</span>
                  {{ share_buttons }}
                </div>
              {%- endif -%}
            </div>
          {%- endif -%}

          {%- if blog.previous_article or blog.next_article -%}
            {%- comment -%}
              Implementation may look a bit strange here as we're using the "next_article" for the previous button and vice-versa. But we actually found that from
              a user point of view, it feels "more logical", if you are on the most recent article, to have a button "next article" on the right that goes to the
              previous article.
            {%- endcomment -%}

            <div class="article__navigation {% if blog.next_article == nil %}article__navigation--align-right{% endif %}">
              {%- if blog.next_article -%}
                <a href="{{ blog.next_article.url }}" class="article__navigation-item article__navigation-item--prev text--strong link" rel="prev">{%- render 'icon', icon: 'arrow-left' -%} {{- 'blog.article.previous_article' | t -}}</a>
              {%- endif -%}

              {%- if blog.previous_article -%}
                <a href="{{ blog.previous_article.url }}" class="article__navigation-item article__navigation-item--next text--strong link" rel="next">{{- 'blog.article.next_article' | t -}} {%- render 'icon', icon: 'arrow-right' -%}</a>
              {%- endif -%}
            </div>
          {%- endif -%}

          {%- if article.comments_enabled? -%}
            <span id="comments" class="anchor"></span>

            {%- if article.comments_count > 0 -%}
              <div class="article__comment-list">
                <p class="article__comment-list-heading heading h2">{{ 'blog.article.comments_count' | t: count: article.comments_count }}</p>

                {%- paginate article.comments by 50 -%}
                  {%- for comment in article.comments -%}
                    <div class="article-comment">
                      {%- if section.settings.show_gravatar -%}
                        <img class="article-comment__gravatar" src="//www.gravatar.com/avatar/{{ comment.email | md5 }}?s=100" alt="{{ comment.author }}">
                      {%- endif -%}

                      <div class="article-comment__inner">
                        <p class="article-comment__author text--strong">{{ comment.author }}</p>
                        <time class="article-comment__date">{{ comment.created_at | date: format: 'month_day_year_time' }}</time>

                        <div class="article-comment__content rte">
                          {{- comment.content -}}
                        </div>
                      </div>
                    </div>
                  {%- endfor -%}

                  {%- render 'pagination', paginate: paginate -%}
                {%- endpaginate -%}
              </div>
            {%- endif -%}

            {%- form 'new_comment', article, class: 'article__comment-form form' -%}
              <p class="article__comment-form-title heading h2">{{ 'blog.comments.leave_comment' | t }}</p>

              {%- if blog.moderated? -%}
                <p class="article__moderated-note">{{ 'blog.comments.approval_notice' | t }}</p>
              {%- endif -%}

              <div class="article__comment-form-wrapper">
                {%- if form.posted_successfully? -%}
                  <p class="alert alert--success">
                    {%- if blog.moderated? -%}
                      {{- 'blog.comments.success_moderated' | t -}}
                    {%- else -%}
                      {{- 'blog.comments.success' | t -}}
                    {%- endif -%}
                  </p>
                {%- else -%}
                  {%- if form.errors -%}
                    <div class="alert alert--error">
                      <ul class="alert__error-list" role="list">
                        {%- for field in form.errors -%}
                          {%- if field == 'form' -%}
                            <li class="alert__error-item">{{ form.errors.messages[field] }}</li>
                          {%- else -%}
                            <li class="alert__error-item">{{ form.errors.translated_fields[field] | capitalize }} {{ form.errors.messages[field] }}</li>
                          {%- endif -%}
                        {%- endfor -%}
                      </ul>
                    </div>
                  {%- endif -%}
                {%- endif -%}

                <div class="form__input-row">
                  <div class="form__input-wrapper form__input-wrapper--labelled">
                    {%- assign form_author = form.author | default: customer.name -%}

                    <input id="comment-form-name" type="text" class="form__field form__field--text {% if form_author != blank %}is-filled{% endif %}" name="comment[author]" value="{{ form_author | escape }}" required="required">
                    <label for="comment-form-name" class="form__floating-label">{{ 'blog.comments.name' | t }}</label>
                  </div>

                  <div class="form__input-wrapper form__input-wrapper--labelled">
                    {%- assign form_email = form.email | default: customer.email -%}

                    <input id="comment-form-email" type="email" class="form__field form__field--text {% if form_email != blank %}is-filled{% endif %}" name="comment[email]" value="{{ form_email | escape }}" required="required">
                    <label for="comment-form-email" class="form__floating-label">{{ 'blog.comments.email' | t }}</label>
                  </div>
                </div>

                <div class="form__input-wrapper form__input-wrapper--labelled">
                  <textarea id="comment-form-body" name="comment[body]" rows="5" class="form__field form__field--textarea {% if form.body != blank %}is-filled{% endif %}" required="required">{{ form.body }}</textarea>
                  <label for="comment-form-body" class="form__floating-label">{{ 'blog.comments.content' | t }}</label>
                </div>

                <button type="submit" class="form__submit button button--primary button--min-width">{{ 'blog.comments.submit' | t }}</button>
              </div>
            {%- endform -%}
          {%- endif -%}
        </div>
      </div>

      <script>
        // Due to the presence of the possible sidebar, we have to move the header outside the section
        document.querySelector('.blog-container').insertAdjacentElement('beforebegin', document.querySelector('#shopify-section-' + {{ section.id | json }} + ' .page__header'));
      </script>

      {%- if section.blocks.size > 0 -%}
        <div class="blog-sidebar {% if section.settings.show_on_mobile %}hidden-tablet{% else %}hidden-pocket{% endif %}">
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'newsletter' -%}
                <div class="blog-sidebar__item blog-sidebar__item--newsletter" id="block-{{ block.id }}" {{ block.shopify_attributes }}>
                  <style>
                    #block-{{ block.id }} {
                      background: {{ block.settings.background }};
                      color: {{ block.settings.text }};
                    }
                  </style>

                  {%- if block.settings.title != blank -%}
                    <h2 class="heading h3">{{ block.settings.title | escape }}</h2>
                  {%- endif -%}

                  {%- if block.settings.content != blank -%}
                    <div class="rte">
                      {{ block.settings.content }}
                    </div>
                  {%- endif -%}

                  {%- assign newsletter_id = 'newsletter-' | append: block.id -%}

                  <div class="newsletter newsletter--compact">
                    <form id="email_signup" class="mc-embedded-subscribe-form" action="https://manage.kmail-lists.com/ajax/subscriptions/subscribe" data-ajax-submit="//manage.kmail-lists.com/ajax/subscriptions/subscribe" method="GET" target="_blank" novalidate="novalidate">
                      <input type="hidden" name="g" value="TjcyTu">
                      <div class="alredy" style="display:none;"></div>
                      <div class=" klaviyo_field_group klaviyo_form_actions">
                        <div class="form__input-wrapper form__input-wrapper--labelled">
                          <input type="email" name="email" id="k_id_email" class="form__field form__field--text form__field--borderless" aria-label="{{ 'home_page.newsletter.input' | t }}" required>
                          <label for="newsletter[contact][email]" class="form__floating-label">{{ 'home_page.newsletter.input' | t }}</label>
                        </div>

                        <button type="submit" class="form__submit form__submit--tight button button--primary button--full klaviyo_submit_button" >{{ 'home_page.newsletter.submit' | t }}</button>

                      </div>
                    </form>
                    <div class="klaviyo_messages">
                      <div class="success_message" style="display:none;"></div>
                      <div class="error_message" style="display:none;"></div>
                    </div>
                    {%- if block.settings.subtext != blank -%}
                      <p class="newsletter__text">{{ block.settings.subtext | escape }}</p>
                    {%- endif -%}
                  </div>
                </div>

              {%- when 'featured_posts' -%}
                <div class="blog-sidebar__item blog-sidebar__item--posts" id="block-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.title != blank -%}
                    <p class="blog-sidebar__block-title heading h3">{{ block.settings.title | escape }}</p>
                  {%- endif -%}

                  <ol class="blog-sidebar__post-list {% if block.settings.show_ranking %}blog-sidebar__post-list--ranked{% endif %}" role="list">
                    {%- assign show_placeholder = true -%}

                    {%- for i in (1..5) -%}
                      {%- assign article_option = 'article_' | append: i -%}
                      {%- assign article = block.settings[article_option] -%}

                      {%- unless article == blank -%}
                        <li class="blog-sidebar__post-item">
                          {%- if article.image -%}
                            <a href="{{ article.url }}" class="blog-sidebar__post-image-wrapper">
                              <div class="blog-sidebar__post-image-overflow">
                                <img src="{{ article.image | img_url: '100x80', crop: 'center', scale: 2 }}" alt="{{ article.image.alt | escape }}" class="blog-sidebar__post-image" loading="lazy">
                              </div>
                            </a>
                          {%- endif -%}

                          <div class="blog-sidebar__post-info">
                            <a class="blog-sidebar__post-title text--strong link" href="{{ article.url }}">{{ article.title }}</a>

                            {%- if block.settings.show_date or block.settings.show_category and article.tags.size > 0 -%}
                              <div class="blog-sidebar__post-meta">
                                
                                {% comment %}
                                {%- if block.settings.show_category and article.tags.size > 0 -%}
                                  <span class="blog-sidebar__post-meta-item">{{ article.tags.first }}</span>
                                {%- endif -%}
                                {% endcomment %}

                                {%- if block.settings.show_date -%}
                                  <span class="blog-sidebar__post-meta-item">{{ article.published_at | date: format: 'short_month_day_year' }}</span>
                                {%- endif -%}
                              </div>
                            {%- endif -%}
                          </div>
                        </li>

                        {%- assign show_placeholder = false -%}
                      {%- endunless -%}
                    {%- endfor -%}

                    {%- if show_placeholder -%}
                      {%- for i in (1..3) -%}
                        <li class="blog-sidebar__post-item">
                          {%- if article.image -%}
                            <a href="#" class="blog-sidebar__post-image-wrapper">
                              <div class="blog-sidebar__post-image-overflow">
                                {%- capture placeholder -%}{% cycle 'lifestyle-1', 'lifestyle-2' %}{%- endcapture -%}
                                {{ placeholder | placeholder_svg_tag: 'blog-sidebar__post-placeholder placeholder-svg' }}
                              </div>
                            </a>
                          {%- endif -%}

                          <div class="blog-sidebar__post-info">
                            <a class="blog-sidebar__post-title text--strong" href="#">{{ 'home_page.onboarding.article_title' | t }}</a>

                            {%- if block.settings.show_date or block.settings.show_category -%}
                              <div class="blog-sidebar__post-meta">
                                {%- if block.settings.show_category -%}
                                  <span class="blog-sidebar__post-meta-item">{{ 'home_page.onboarding.article_category' | t }}</span>
                                {%- endif -%}

                                {%- if block.settings.show_date -%}
                                  <span class="blog-sidebar__post-meta-item">{{ 'now' | date: format: 'short_month_day_year' }}</span>
                                {%- endif -%}
                              </div>
                            {%- endif -%}
                          </div>
                        </li>
                      {%- endfor -%}
                    {%- endif -%}
                  </ol>
                </div>

              {%- when 'rich_text' -%}
                <div class="blog-sidebar__item blog-sidebar__item--text" id="block-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.title != blank -%}
                    <p class="blog-sidebar__block-title heading h3">{{ block.settings.title | escape }}</p>
                  {%- endif -%}

                  {%- if block.settings.content != blank -%}
                    <div class="rte text--pull">
                      {{ block.settings.content }}
                    </div>
                  {%- endif -%}
                </div>

              {%- when 'featured_products' -%}
                <div class="blog-sidebar__item blog-sidebar__item--products" id="block-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.title != blank -%}
                    <p class="blog-sidebar__block-title heading h3">{{ block.settings.title | escape }}</p>
                  {%- endif -%}

                  <div class="product-list product-list--horizontal">
                    {%- assign show_placeholder = true -%}

                    {%- for tag in article_tags -%}
                      {%- assign product = all_products[tag] -%}
                      {%- unless product.empty? -%}
                        {% render 'featured-collection-product-item', product: product, horizontal: true, show_add_to_cart: true %}
                        {%- assign show_placeholder = false -%}
                      {%- endunless -%}
                    {%- endfor -%}

                    {%- if show_placeholder -%}
                      {%- for i in (1..2) -%}
                        {% render 'product-item-placeholder', horizontal: true %}
                      {%- endfor -%}
                    {%- endif -%}
                  </div>
                </div>

              {%- when 'links' -%}
                <div class="blog-sidebar__item blog-sidebar__item--menu" id="block-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- assign menu = linklists[block.settings.menu] -%}

                  {%- unless menu.empty? -%}
                    <p class="blog-sidebar__block-title heading h3">{{ menu.title }}</p>

                    <ul class="blog-sidebar__linklist" role="list">
                      {%- for link in menu.links -%}
                        <li class="blog-sidebar__link-item">
                          <a href="{{ link.url }}" class="text--strong link">{{ link.title }}</a>
                        </li>
                      {%- endfor -%}
                    </ul>
                  {%- endunless -%}
                </div>

              {%- when 'social_media' -%}
                <div class="blog-sidebar__item blog-sidebar__item--social" id="block-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.title != blank -%}
                    <p class="blog-sidebar__block-title heading h3">{{ block.settings.title | escape }}</p>
                  {%- endif -%}

                  {%- capture social_media -%}{% render 'social-media', show_social_media_name: false %}{%- endcapture -%}

                  {%- if social_media != blank -%}
                    <div class="blog-sidebar__social-list">
                      {{ social_media }}
                    </div>
                  {%- endif -%}
                </div>
            {%- endcase -%}
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</article>

<div id="modal-quick-view-{{ section.id }}" class="modal" aria-hidden="true">
  <div class="modal__dialog modal__dialog--stretch" role="dialog">
    <button class="modal__close link" data-action="close-modal">{%- render 'icon', icon: 'close' -%}</button>

    <div class="modal__loader">
      {%- render 'icon', icon: 'search-loader' -%}
    </div>

    <div class="modal__inner"></div>
  </div>
</div>

<script>

  Weglot.initialize({
    api_key: "wg_8d12f340033b6271a377b25af01660625",
    translate_iframes: ["#bsIframebxmaxyggl6057349323274102"]
  });

  var KlaviyoSubscribe = KlaviyoSubscribe || {};
  (function () {
    if (!KlaviyoSubscribe._loaded) {
      KlaviyoSubscribe._loaded = !0;
      var m = {
        "modal.html":
        '<div class="klaviyo_modal" style="display:none;"><div class="klaviyo_inner"><a href="#" class="klaviyo_close_modal klaviyo_header_close">&times;</a><form action="" method="POST" novalidate="novalidate" class="klaviyo_subscription_form"><input type="hidden" name="g" value="" /><p class="klaviyo_header"></p><p class="klaviyo_subheader"></p><div class="klaviyo_fieldset"></div><div class="klaviyo_fine_print"></div><div class="klaviyo_form_actions"><button type="submit" class="klaviyo_submit_button"><span></span></button></div><div class="klaviyo_below_submit"></div><div class="error_message" style="display:none;"></div></form><div class="success_message" style="display:none;"></div></div></div>',
        "flyout.html":
        '<div class="klaviyo_flyout" style="display:none;"><div class="klaviyo_inner"><div class="klaviyo_topbar" /><a href="#" class="klaviyo_close_flyout klaviyo_header_close">&times;</a><p class="klaviyo_header"></p><p class="klaviyo_subheader"></p><div class="klaviyo_flyout_action"><a href="#"><span /> &raquo;</a></div></div></div>',
        "flyout_form.html":
        '<div class="klaviyo_flyout" style="display:none;"><div class="klaviyo_inner"><div class="klaviyo_topbar" /><a href="#" class="klaviyo_close_flyout klaviyo_header_close">&times;</a><form action="" method="POST" novalidate="novalidate" class="klaviyo_subscription_form"><input type="hidden" name="g" value="" /><p class="klaviyo_header"></p><p class="klaviyo_subheader"></p><div class="klaviyo_inline_fieldset"><input type="email" name="email" placeholder="Your email address" /><button type="submit" class="klaviyo_submit_button"><span></span></button></div><div class="error_message" style="display:none;"></div></form><div class="success_message" style="display:none;"></div></div></div>',
      },
          n = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
          p = { $email: "Email Address", $first_name: "First Name", $last_name: "Last Name" },
          h = "klaClosedPopup";
      KlaviyoSubscribe._debug = -1 < document.location.hash.indexOf("#test");
      KlaviyoSubscribe.has_called_bootstrap = !1;
      KlaviyoSubscribe.is_requirements_loaded = !1;
      KlaviyoSubscribe.bootstrap_queue = [];
      KlaviyoSubscribe.bootstrap_attempts = 0;
      KlaviyoSubscribe.instances = {};
      KlaviyoSubscribe.isDebugMode = function () {
        return KlaviyoSubscribe._debug;
      };
      KlaviyoSubscribe.bootstrap = function (a) {
        KlaviyoSubscribe.has_called_bootstrap || ((KlaviyoSubscribe.has_called_bootstrap = !0), KlaviyoSubscribe.loadCss("//a.klaviyo.com/media/css/public/klaviyo_subscribe.css"), KlaviyoSubscribe.fetchRequirements(a));
      };
      KlaviyoSubscribe.setHasClosedModalCookieName = function (a) {
        h = a || h;
      };
      KlaviyoSubscribe.loadScript = function (a, b, c) {
        var d = document.getElementsByTagName("head")[0],
            e = document.createElement("script");
        e.type = "text/javascript";
        e.src = a;
        d.appendChild(e);
        KlaviyoSubscribe.log("Loaded JS", a);
        KlaviyoSubscribe.whenTrue(b, c);
      };
      KlaviyoSubscribe.loadCss = function (a) {
        var b = document.getElementsByTagName("head")[0],
            c = document.createElement("link");
        c.rel = "stylesheet";
        c.type = "text/css";
        c.href = a;
        b.appendChild(c);
        KlaviyoSubscribe.log("Loaded CSS", a);
      };
      KlaviyoSubscribe.injectCSS = function (a) {
        var b = document.getElementsByTagName("head")[0],
            c = document.createElement("style");
        c.type = "text/css";
        c.styleSheet ? (c.styleSheet.cssText = a) : c.appendChild(document.createTextNode(a));
        b.appendChild(c);
      };
      KlaviyoSubscribe.whenTrue = function (a, b) {
        var c = 0,
            d = function () {
              a() ? b() : (c++, 100 > c && setTimeout(d, 200));
            };
        d();
      };
      KlaviyoSubscribe.loadJQuery = function (a) {
        KlaviyoSubscribe.loadScript(
          "//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js",
          function () {
            return !!window.jQuery;
          },
          a
        );
      };
      KlaviyoSubscribe.loadJQueryForm = function (a) {
        KlaviyoSubscribe.loadScript(
          "//cdnjs.cloudflare.com/ajax/libs/jquery.form/3.32/jquery.form.min.js",
          function () {
            return !!window.jQuery && jQuery.fn.ajaxForm && jQuery.fn.formSerialize;
          },
          a
        );
      };
      KlaviyoSubscribe.fetchRequirements = function (a) {
        document.getElementsByTagName("head");
        a = a || {};
        if (window.jQuery) jQuery.fn.ajaxForm ? KlaviyoSubscribe.processQueue() : KlaviyoSubscribe.loadJQueryForm(KlaviyoSubscribe.processQueue);
        else {
          var b = function () {
            KlaviyoSubscribe.log("jQuery loaded.");
            KlaviyoSubscribe.loadJQueryForm(KlaviyoSubscribe.processQueue);
          };
          !0 === a.assume_jquery
          ? KlaviyoSubscribe.whenTrue(function () {
            return !!window.jQuery;
          }, b)
          : KlaviyoSubscribe.loadJQuery(b);
        }
      };
      KlaviyoSubscribe.processQueue = function () {
        var a,
            b = function () {
              for (KlaviyoSubscribe.log("Processing queue."); (a = KlaviyoSubscribe.bootstrap_queue.shift()); ) a();
              KlaviyoSubscribe.bootstrap_queue.push = function (a) {
                a();
              };
            };
        KlaviyoSubscribe.log("Waiting for DOM to process queue.");
        jQuery(b);
        setTimeout(b, 5e3);
      };
      KlaviyoSubscribe.executeWhenRequirementsLoaded = function (a) {
        KlaviyoSubscribe.bootstrap_queue.push(a);
      };
      KlaviyoSubscribe.watchField = function (a, b, c) {
        c = c || {};
        c.type = c.type || "text";
        if ("email" === b || "$email" === b) c.type = "email";
        KlaviyoSubscribe.bootstrap();
        KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          KlaviyoSubscribe.log("Watching field", a, jQuery(a).length);
          var d = function (a) {
            a = jQuery.trim($(a.target).val());
            KlaviyoSubscribe.log("Watch field value", a);
            if ("email" !== c.type || n.test(a)) {
              if (window._learnq && _learnq.push) {
                var d = {};
                d[b] = a;
                _learnq.push(["identify", d]);
              }
              c.callback && c.callback(b, a);
            }
          };
          if (c.delegate) jQuery(c.delegate).on("change blur", a, d);
          else jQuery(a).on("change blur", d);
        });
      };
      KlaviyoSubscribe.watchFormSubmission = function (a, b) {
        b = b || {};
        b.properties = b.properties || {};
        b.list &&
          (KlaviyoSubscribe.bootstrap(),
           KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          if (b.properties) {
            var c = [];
            jQuery.each(b.properties, function (a, b) {
              c.push(a);
            });
            c.length && (b.properties.$fields = c.join(","));
          }
          KlaviyoSubscribe.log("Watching form", a, jQuery(a).length);
          var d = function (a) {
            var c = $(a.target);
            if (window._learnq && _learnq.identify) {
              var d = _learnq.identify();
              if (d && (d = d.$email || d.email)) {
                if (b.if) {
                  var e = jQuery(b.if);
                  if (!e.length || (e.is(":checkbox") ? !e.is(":checked") : !e.val())) {
                    KlaviyoSubscribe.log("Subscribe if fails", e);
                    return;
                  }
                }
                d = jQuery.extend({ g: b.list, email: d }, b.properties);
                KlaviyoSubscribe.log("Subscribing", d);
                $.post("//manage.kmail-lists.com/ajax/subscriptions/subscribe", d);
                KlaviyoSubscribe._logMetric("submitModal", b.list);
                b.wait_seconds &&
                  (a.preventDefault(),
                   setTimeout(function () {
                  KlaviyoSubscribe.log("Submitting form", c);
                  c.get(0).submit();
                }, 1e3 * b.wait_seconds));
              }
            }
          };
          if (b.delegate) jQuery(b.delegate).on("submit", a, d);
          else jQuery(a).on("submit", d);
        }));
      };
      KlaviyoSubscribe.attachToForms = function (a, b) {
        b = b || {};
        var c = b.extra_properties || {};
        c.$source = c.$source || "$embed";
        KlaviyoSubscribe.bootstrap();
        KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          KlaviyoSubscribe.log("Attaching to forms", a, jQuery(a).length);
          jQuery(a).each(function () {
            var a = jQuery(this),
                e = a.data("ajax-submit");
            e || (e = "//manage.kmail-lists.com/ajax/subscriptions/subscribe");
            a.ajaxForm({
              url: e,
              type: "POST",
              beforeSubmit: function (b, d, e) {
                try {
                  if (!KlaviyoSubscribe.isFormValid(a)) return !1;
                } catch (k) {
                  return KlaviyoSubscribe.log(k), a.find(".error_message").show().html(k), a.trigger("klaviyo.subscribe.error"), !1;
                }
                KlaviyoSubscribe.log("$source", c.$source);
                KlaviyoSubscribe.normalizeFormFields(b, a, c, e);
                KlaviyoSubscribe._logMetric(
                  "submitModal",
                  b.find(function (a) {
                    return "g" === a.name;
                  }).value
                );
                a.find(".klaviyo_submit_button").attr("disabled", !0);
              },
              success: function (c, d, e) {
                a.find(".success_message, .error_message").hide();
                a.find(".klaviyo_submit_button").attr("disabled", !1);
                if(c.success){
                  if(!c.data.is_subscribed){
                    (KlaviyoSubscribe.setClosedModalCookie(),
                     (d = a.find(".success_message").show()),
                     d.length || (d = a.parent().find(".success_message").show()),
                     window._learnq && _learnq.push && (e = a.find('[name="email"]').val()) && (_learnq.push(["identify", { $email: e }]), _learnq.push(["trackActivity"])),
                     b.success_url
                     ? (window.location = b.success_url)
                     : (!0 !== b.custom_success_message &&
                        d.html(b.success_message || '<div class="klaviyo_header">Thanks for subscribing!</div>').end(),
                        !0 === b.hide_form_on_success && (a.find(".klaviyo_field_group input, .klaviyo_form_actions").hide(), a.is(".klaviyo_horizontal_form") && a.find(".klaviyo_field_group").hide()),
                        b.success && b.success(a, c.data),
                        a.trigger("klaviyo.subscribe.success").resetForm()));
                    $('.alredy').hide();
                  }else{
                    d = a.find(".success_message").show();
                    if(!d.length){
                      d = a.parent().find(".success_message").hide();
                      $('.alredy').show();
                      $('.alredy').html('You are already subscribed to the list.');

                    }
                  }
                }else{
                  (KlaviyoSubscribe.log(c.errors), a.find(".error_message").show().html(c.errors.join(" ")), a.trigger("klaviyo.subscribe.error"));
                }

              },
            });
            KlaviyoSubscribe.log("Attached to form", this);
          });
        });
      };
      KlaviyoSubscribe.attachModalSignUp = function (a) {
        a = a || {};
        a.pages = a.pages || [];
        a.excluded_pages = a.excluded_pages || [];
        a.delay_seconds = a.delay_seconds || 0.1;
        a.delay_num_pages = a.delay_num_pages || 0;
        a.content = a.content || {};
        a.extra_properties = a.extra_properties || {};
        a.extra_properties.$source = a.extra_properties.$source || "$modal";
        a.list &&
          (KlaviyoSubscribe.bootstrap(),
           KlaviyoSubscribe.setHasClosedModalCookieName(a.has_closed_modal_cookie_name),
           KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          var b = KlaviyoSubscribe._buildModalSignUp(a);
          b.find('[name="g"]').val(a.list);
          b.appendTo(jQuery("body"));
          KlaviyoSubscribe.attachToModalForm(b, {
            list: a.list,
            pages: a.pages,
            excluded_pages: a.excluded_pages,
            delay: a.delay_seconds,
            delay_num_pages: a.delay_num_pages,
            ignore_cookie: a.ignore_cookie,
            extra_properties: a.extra_properties,
            custom_success_message: !!a.content.success,
            success_url: a.success_url,
            success: function (b) {
              b.hide();
              a.success && a.success(b);
            },
          });
        }));
      };
      KlaviyoSubscribe._buildModalSignUp = function (a) {
        var b = a.content;
        b.fields = b.extra_fields || [];
        -1 === jQuery.inArray("$email", b.fields) && b.fields.unshift("$email");
        if (b.element) return jQuery(b.element);
        var c = jQuery(m["modal.html"])
        .attr("id", "k_id_modal")
        .find(".klaviyo_header")
        .html(b.header || "Interested in our Newsletter?")
        .end()
        .find(".klaviyo_subscription_form")
        .attr("action", a.subscribe_url || "//manage.kmail-lists.com/subscriptions/subscribe")
        .data("ajax-submit", a.ajax_subscribe_url || "//manage.kmail-lists.com/ajax/subscriptions/subscribe")
        .end()
        .find(".klaviyo_submit_button span")
        .html(b.button || "Subscribe")
        .end();
        b.clazz && c.addClass(b.clazz);
        b.styles && KlaviyoSubscribe.injectCSS(b.styles);
        !1 !== b.subheader && c.find(".klaviyo_subheader").html(b.subheader || "Stay in the know with news and promotions.");
        b.below_submit ? c.find(".klaviyo_below_submit").html(b.below_submit) : c.find(".klaviyo_below_submit").hide();
        b.success && c.find(".success_message").html(b.success);
        !0 === a.ack && c.append(jQuery('<div class="klaviyo_ack"><a href="http://www.klaviyo.com/?utm_campaign=pbk">Powered by Klaviyo</a></div>'));
        var d = c.find(".klaviyo_fieldset");
        jQuery.each(b.fields, function (a, b) {
          "string" === typeof b && (b = { name: b });
          b.type || (b.type = "$email" === b.name ? "email" : "text");
          b.label || (b.label = p[b.name] || b.name);
          a = "k_id_modal_" + b.name;
          d.append(
            jQuery('<div class="klaviyo_field_group" />')
            .append(jQuery("<label />").attr("for", a).html(b.label))
            .append(jQuery("<input />").attr({ type: b.type, id: a, name: "$" === b.name[0] ? b.name.slice(1) : b.name }))
          );
        });
        a = b.fine_print || "";
        b.email_frequency && (a += " Our newsletter is delivered to your inbox " + b.email_frequency + ".");
        c.find(".klaviyo_fine_print").html(a);
        return c;
      };
      KlaviyoSubscribe.attachToModalForm = function (a, b) {
        b = b || {};
        b.pages = b.pages || [];
        b.excluded_pages = b.excluded_pages || [];
        b.extra_properties = b.extra_properties || {};
        b.extra_properties.$source = b.extra_properties.$source || "$modal";
        void 0 === b.delay_seconds && (b.delay_seconds = void 0 === b.delay ? 2 : b.delay);
        KlaviyoSubscribe.bootstrap();
        KlaviyoSubscribe.setHasClosedModalCookieName(b.has_closed_modal_cookie_name);
        KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          var c = jQuery(a);
          KlaviyoSubscribe.attachToForms(jQuery(a).find(".klaviyo_subscription_form"), b);
          c.delegate(".klaviyo_close_modal", "click", function (a) {
            a.preventDefault();
            c.hide();
            KlaviyoSubscribe.setClosedModalCookie();
            KlaviyoSubscribe._logMetric("closeModal", b.list);
          });
          c.click(function (a) {
            a.currentTarget === a.target && (c.hide(), KlaviyoSubscribe.setClosedModalCookie());
          });
          KlaviyoSubscribe._canShowElem(b) &&
            jQuery(function () {
            setTimeout(function () {
              KlaviyoSubscribe._logMetric("openModal", b.list);
              c.fadeIn(1e3);
              c.trigger("klaviyo.modal.show");
            }, 1e3 * b.delay_seconds);
          });
        });
      };
      KlaviyoSubscribe.attachFlyoutSignUp = function (a) {
        a = a || {};
        a.pages = a.pages || [];
        a.excluded_pages = a.excluded_pages || [];
        a.delay_scroll = void 0 === a.delay_scroll ? 50 : a.delay_scroll;
        a.delay_seconds = a.delay_seconds || 0.1;
        a.delay_num_pages = a.delay_num_pages || 0;
        a.position = a.position || "right";
        a.content = a.content || {};
        a.extra_properties = a.extra_properties || {};
        a.extra_properties.$source = a.extra_properties.$source || "$flyout";
        void 0 === a.modal_content && (a.modal_content = a.content);
        a.list &&
          (KlaviyoSubscribe.bootstrap(),
           KlaviyoSubscribe.setHasClosedModalCookieName(a.has_closed_modal_cookie_name),
           KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          var b = !1 === a.modal_content,
              c = KlaviyoSubscribe._buildFlyoutSignUp(jQuery.extend({ include_form: b }, a));
          c.appendTo(jQuery("body"));
          if (b) {
            var d = a.success;
            a.success = function (a) {
              a.hide();
              KlaviyoSubscribe.setClosedModalCookie();
              d && d(a);
            };
            a.custom_success_message = !!a.content.success;
            c.find('[name="g"]').val(a.list);
            KlaviyoSubscribe.attachToForms(c.find(".klaviyo_subscription_form"), a);
          }
          KlaviyoSubscribe.attachToFlyout(c, {
            list: a.list,
            pages: a.pages,
            excluded_pages: a.excluded_pages,
            delay: a.delay_seconds,
            delay_scroll: a.delay_scroll,
            delay_num_pages: a.delay_num_pages,
            position: a.position,
            ignore_cookie: a.ignore_cookie,
            extra_properties: a.extra_properties,
            click: function (b) {
              b = KlaviyoSubscribe._buildModalSignUp({ content: a.modal_content });
              b.find('[name="g"]').val(a.list);
              b.appendTo(jQuery("body"));
              KlaviyoSubscribe.attachToModalForm(b, {
                list: a.list,
                delay: 0.01,
                extra_properties: a.extra_properties,
                success_url: a.success_url,
                success: function (b) {
                  b.hide();
                  a.success && a.success(b);
                },
              });
            },
          });
        }));
      };
      KlaviyoSubscribe._buildFlyoutSignUp = function (a) {
        var b = a.content;
        if (b.element) return jQuery(b.element);
        var c = jQuery(m[a.include_form ? "flyout_form.html" : "flyout.html"])
        .attr("id", "k_id_flyout")
        .find(".klaviyo_header")
        .html(b.header || "Interested in our Newsletter?")
        .end()
        .find(".klaviyo_subscription_form")
        .attr("action", a.subscribe_url || "//manage.kmail-lists.com/subscriptions/subscribe")
        .data("ajax-submit", a.ajax_subscribe_url || "//manage.kmail-lists.com/ajax/subscriptions/subscribe")
        .end()
        .find(".klaviyo_flyout_action a span, .klaviyo_submit_button span")
        .html(b.button || "Subscribe")
        .end();
        c.addClass("klaviyo_" + a.position);
        b.clazz && c.addClass(b.clazz);
        b.styles && KlaviyoSubscribe.injectCSS(b.styles);
        !1 !== b.subheader && c.find(".klaviyo_subheader").html(b.subheader || "Stay in the know with news and promotions.");
        b.success && c.find(".success_message").html(b.success);
        !0 === a.ack && c.find(".klaviyo_inner").append(jQuery('<div class="klaviyo_ack"><a href="http://www.klaviyo.com/?utm_campaign=pbk">Powered by Klaviyo</a></div>'));
        return c;
      };
      KlaviyoSubscribe.attachToFlyout = function (a, b) {
        b = b || {};
        b.pages = b.pages || [];
        b.excluded_pages = b.excluded_pages || [];
        b.position = b.position || "right";
        b.extra_properties = b.extra_properties || {};
        b.extra_properties.$source = b.extra_properties.$source || "$flyout";
        KlaviyoSubscribe.bootstrap();
        KlaviyoSubscribe.setHasClosedModalCookieName(b.has_closed_modal_cookie_name);
        KlaviyoSubscribe.executeWhenRequirementsLoaded(function () {
          var c = jQuery(a);
          c.delegate(".klaviyo_close_flyout", "click", function (a) {
            a.preventDefault();
            c.hide();
            KlaviyoSubscribe.setClosedModalCookie();
            KlaviyoSubscribe._logMetric("closeModal", b.list);
          });
          c.find(".klaviyo_flyout_action a").click(function (a) {
            a.preventDefault();
            c.hide();
            b.click && b.click();
          });
          KlaviyoSubscribe._canShowElem(b) &&
            jQuery(function () {
            var a = b.delay_scroll,
                e = function () {
                  if (!c.data("opened")) {
                    var a = b.delay_seconds || b.delay;
                    void 0 === a && (a = 2);
                    setTimeout(function () {
                      if (!c.data("opened")) {
                        c.data("opened", !0);
                        c.trigger("klaviyo.flyout.show");
                        var a = c.find(".klaviyo_inner"),
                            d = -1 < jQuery.inArray(b.position, ["left", "right", "bottom", "top"]) ? b.position : "right",
                            e = {},
                            g;
                        e[d] = 0;
                        c.css("visibility", "hidden").show();
                        KlaviyoSubscribe._logMetric("openModal", b.list);
                        "left" === d ? (g = 1.2 * -a.width()) : "right" === d ? (g = 1.2 * -a.width()) : "top" === d ? (g = 1.2 * -a.height()) : "bottom" === d && (g = 1.2 * -a.height());
                        a.css(d, g);
                        c.css("visibility", "visible");
                        a.animate(e, 1e3 * (b.slide_seconds || 2));
                      }
                    }, 1e3 * a);
                  }
                };
            if (!1 === a || 0 === a) e();
            else {
              var f = jQuery(document),
                  q = jQuery(window),
                  g = "bottom" === a ? 95 : a,
                  k = function () {
                    var a = f.height() - q.height();
                    (0 > a ? 100 : (100 * f.scrollTop()) / a) > g && (e(), f.unbind("scroll", k));
                  };
              f.scroll(k);
            }
          });
        });
      };
      KlaviyoSubscribe.isFormValid = function (a) {
        var b = a.find('[name="email"]').val();
        if (!b || !/@/.test(b)) throw (KlaviyoSubscribe.log("Invalid email address"), "Invalid email address");
        a.find('input[required="true"], select[required="true"]').each(function (b, d) {
          d = jQuery(d);
          if (d.is(":radio") || d.is(":checked")) {
            has_value = !!a.find('[name="' + d.attr("name") + '"]:checked').length;
            if (!has_value) throw (KlaviyoSubscribe.log("Required field missing", d.attr("name")), "Required field missing: " + d.attr("name"));
            return has_value;
          }
          if (!d.val()) throw (KlaviyoSubscribe.log("Required field missing", d.attr("name")), "Required field missing: " + d.attr("name"));
        });
        a.find(".select-date-widget").each(function (a, b) {
          b = jQuery(b);
          a = KlaviyoSubscribe._int(b.find('[name$="_day"]').val());
          var c = KlaviyoSubscribe._int(b.find('[name$="_month"]').val());
          b = KlaviyoSubscribe._int(b.find('[name$="_year"]').val());
          if (!(isNaN(a) || isNaN(c) || isNaN(b))) {
            switch (c) {
              case 1:
              case 3:
              case 5:
              case 7:
              case 8:
              case 10:
              case 12:
                if (1 <= a && 31 >= a) return;
              case 4:
              case 6:
              case 9:
              case 11:
                if (1 <= a && 30 >= a) return;
              case 2:
                if (1 <= a && a <= (b % 4 ? 28 : 29)) return;
            }
            KlaviyoSubscribe.log("Invalid date", b, c, a);
            throw "Invalid date";
          }
        });
        return !0;
      };
      KlaviyoSubscribe.normalizeFormFields = function (a, b, c, d) {
        a.push({ name: "$timezone_offset", type: "text", value: this._getUtcOffset() });
        var e = [],
            f;
        jQuery.each(c, function (b, c) {
          a.push({ name: b, type: "text", value: c });
          e.push(b);
        });
        e.length &&
          (jQuery.each(a, function (a, b) {
          if ("$fields" === b.name) return (f = b), !1;
        }),
           f ? (f.value += "," + e.join()) : a.push({ name: "$fields", type: "text", value: e.join() }));
        b.find(".select-date-widget").each(function (b, c) {
          c = jQuery(c);
          var d = c.find('[name$="_day"]');
          b = c.find('[name$="_month"]');
          var e = c.find('[name$="_year"]');
          c = d.attr("name");
          var f = b.attr("name"),
              g = e.attr("name");
          d = KlaviyoSubscribe._int(d.val());
          var h = KlaviyoSubscribe._int(b.val());
          e = KlaviyoSubscribe._int(e.val());
          if (!(isNaN(d) || isNaN(h) || isNaN(e))) {
            for (b = 0; b < a.length; ) {
              var l = a[b];
              !l || (l.name !== c && l.name !== f && l.name !== g) ? b++ : a.splice(b, 1);
            }
            a.push({ name: c.replace("_day", ""), required: !0, type: "text", value: KlaviyoSubscribe._formatDate(e, h, d) });
          }
        });
      };
      KlaviyoSubscribe.isCurrentLocationInPatterns = function (a) {
        for (var b = location.toString(), c = 0, d = a.length; c < d; c++) if (KlaviyoSubscribe.patternMatchesUrl(a[c], b)) return !0;
        return !1;
      };
      KlaviyoSubscribe.patternMatchesUrl = function (a, b) {
        b = b.toLowerCase();
        if (a === b) return !0;
        if (-1 === a.indexOf("?")) {
          var c = b.indexOf("?");
          -1 !== c && (b = b.substring(0, c));
        }
        if (-1 === a.indexOf("*")) return (a = a.replace(/\/$/, "")), "" === a && (a = "/"), (b = b.replace(/\/$/, "")), a === b ? !0 : 0 === a.indexOf("/") ? ((b = KlaviyoSubscribe.parseDomain(b)), "" === a ? "/" === b : b === a) : !1;
        if (a === b) return !0;
        if (!a.length) return !1;
        c = a.replace(/[.+?|()\[\]{}\\]/g, "\\$&").replace(/\*/g, "(.*?)");
        c = /\/$/.test(c) ? "^" + c + "$" : "^" + c + "/?$";
        c = new RegExp(c, "i");
        return c.test(b) ? !0 : a.indexOf("/") ? !1 : c.test(KlaviyoSubscribe.parseDomain(b));
      };
      KlaviyoSubscribe.parseDomain = function (a) {
        return "/" + a.split("//")[1].split("/").splice(1).join("/");
      };
      KlaviyoSubscribe.incrPageViews = function () {
        var a = parseInt(KlaviyoSubscribe._getCookie("klaPages"), 10);
        isNaN(a) && (a = 0);
        a += 1;
        KlaviyoSubscribe._setCookie("klaPages", a, 31536e6);
        return a;
      };
      KlaviyoSubscribe.setClosedModalCookie = function () {
        KlaviyoSubscribe._setCookie(h, "1", 31536e6);
      };
      KlaviyoSubscribe.resetClosedModalCookie = function () {
        KlaviyoSubscribe._deleteCookie(h);
      };
      KlaviyoSubscribe.hasClosedModal = function () {
        return !!KlaviyoSubscribe._getCookie(h) && !KlaviyoSubscribe.isDebugMode();
      };
      KlaviyoSubscribe._setCookie = function (a, b, c) {
        c = new Date(new Date().getTime() + c);
        document.cookie = a + "=" + b + ";expires=" + c.toGMTString() + ";path=/";
      };
      KlaviyoSubscribe._getCookie = function (a) {
        return (a = new RegExp("(^|;)[ ]*" + a + "=([^;]*)").exec(document.cookie)) ? a[2] : "";
      };
      KlaviyoSubscribe._deleteCookie = function (a) {
        KlaviyoSubscribe._getCookie(a) && KlaviyoSubscribe._setCookie(a, "", -1);
      };
      KlaviyoSubscribe._getUtcOffset = function () {
        return new Date().getTimezoneOffset() / -60;
      };
      KlaviyoSubscribe._canShowElem = function (a) {
        return (a.delay_num_pages && a.delay_num_pages > KlaviyoSubscribe.incrPageViews()) ||
          (a.pages.length && !KlaviyoSubscribe.isCurrentLocationInPatterns(a.pages)) ||
          (a.excluded_pages.length && KlaviyoSubscribe.isCurrentLocationInPatterns(a.excluded_pages))
        ? !1
        : a.ignore_cookie || !KlaviyoSubscribe.hasClosedModal();
      };
      KlaviyoSubscribe._int = function (a) {
        return parseInt(a, 10);
      };
      KlaviyoSubscribe._formatDate = function (a, b, c) {
        1 === c.toString().length && (c = "0" + c);
        1 === b.toString().length && (b = "0" + b);
        return a + "-" + b + "-" + c;
      };
      KlaviyoSubscribe.log = function () {
        window.console && console.log && console.log(arguments);
      };
      KlaviyoSubscribe._logMetric = function (a, b) {};
      Array.prototype.find ||
        Object.defineProperty(Array.prototype, "find", {
        value: function (a, b) {
          if (null == this) throw new TypeError('"this" is null or not defined');
          var c = Object(this),
              d = c.length >>> 0;
          if ("function" !== typeof a) throw new TypeError("predicate must be a function");
          for (var e = 0; e < d; ) {
            var f = c[e];
            if (a.call(b, f, e, c)) return f;
            e++;
          }
        },
      });
    }
  })();

  KlaviyoSubscribe.attachToForms('#email_signup', {
    hide_form_on_success: true 
  });
  KlaviyoSubscribe.attachToForms('#email_signupp', {
    hide_form_on_success: true 
  });
</script>

{% schema %}
{
  "name": "Blog post",
  "blocks": [
    {
      "type": "image",
      "name": "Form PDF",
      "settings": [
        {
          "type": "article",
          "id": "article",
          "label": "Select article"
        } ,
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "textarea",
          "id": "heading",
          "label": "heading"
        },
        {
          "type": "textarea",
          "id": "subheading",
          "label": "Sub Heading"
        },
        {
          "type": "textarea",
          "id": "buttontext",
          "label": "Button Text"
        }
      ]
    },
    {
      "type": "newsletter",
      "name": "Newsletter",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Customers who subscribe will have their email address added to the \"accepts marketing\" [customer list](/admin/customers?query=&accepts_marketing=1)."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Join Us"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Text",
          "default": "<p>A short sentence describing what someone will receive by subscribing</p>"
        },
        {
          "type": "text",
          "id": "subtext",
          "label": "Sub-text",
          "default": "100% free, Unsubscribe any time!"
        },
        {
          "type": "color",
          "id": "background",
          "label": "Background",
          "default": "#1e2d7d"
        },
        {
          "type": "color",
          "id": "text",
          "label": "Text",
          "default": "#ffffff"
        }
      ]
    },
    {
      "type": "social_media",
      "name": "Social media",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Make sure to have properly configured your social media in the theme settings."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Follow us"
        },
        {
          "type": "checkbox",
          "id": "show_rss",
          "label": "Show RSS",
          "default": true
        }
      ]
    },
    {
      "type": "featured_posts",
      "name": "Blog posts",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Popular posts"
        },
        {
          "type": "checkbox",
          "id": "show_ranking",
          "label": "Show ranking",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_category",
          "label": "Show category",
          "info": "The first article's tag will be shown as category.",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_date",
          "label": "Show date",
          "default": true
        },
        {
          "type": "article",
          "id": "article_1",
          "label": "Blog post 1"
        },
        {
          "type": "article",
          "id": "article_2",
          "label": "Blog post 2"
        },
        {
          "type": "article",
          "id": "article_3",
          "label": "Blog post 3"
        },
        {
          "type": "article",
          "id": "article_4",
          "label": "Blog post 4"
        },
        {
          "type": "article",
          "id": "article_5",
          "label": "Blog post 5"
        }
      ]
    },
    {
      "type": "rich_text",
      "name": "Rich text",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Your text"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Text",
          "default": "<p>You can use this text to write about your brand.</p>"
        }
      ]
    },
    {
      "type": "featured_products",
      "name": "Featured products",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Featured products"
        },
        {
          "type": "product",
          "id": "product_1",
          "label": "Product 1"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "Product 2"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "Product 3"
        }
      ]
    },
    {
      "type": "links",
      "name": "Links",
      "settings": [
        {
          "type": "link_list",
          "id": "menu",
          "label": "Menu",
          "info": "This menu won't show dropdown items."
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "show_category",
      "label": "Show category",
      "info": "The first article's tag will be shown as category.",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_on_mobile",
      "label": "Sidebar Show on mobile",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "Show author",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "Show date",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "label": "Show share buttons",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "label": "Show tags",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_gravatar",
      "label": "Show comment avatar",
      "default": true
    }
  ]
}
{% endschema %}